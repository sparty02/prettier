// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`await_parse.js 1`] = `
"async function f() { (await f()).length }
async function g() {
  invariant(
    (await driver.navigator.getUrl()).substr(-7)
  );
}
function *f(){
  !(yield a);
}
async function f() {
  a = !(await f());
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
async function f() {
  (await f()).length;
}
async function g() {
  invariant((await driver.navigator.getUrl()).substr(-7));
}
function* f() {
  !(yield a);
}
async function f() {
  a = !await f();
}
"
`;

exports[`conditional-expression.js 1`] = `
"async function f() {
  const result = typeof fn === 'function' ? await fn() : null;
}

(async function() {
  console.log(
    await (true ? Promise.resolve(\\"A\\") : Promise.resolve(\\"B\\"))
  );
})()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
async function f() {
  const result = typeof fn === \\"function\\" ? await fn() : null;
}

(async function () {
  console.log(await (true ? Promise.resolve(\\"A\\") : Promise.resolve(\\"B\\")));
})();
"
`;
