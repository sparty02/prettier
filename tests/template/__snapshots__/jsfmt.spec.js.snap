// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`faulty-locations.js 1`] = `
"var o = {
  [\`key\`]: () => {
    // Comment
  }
};

var x = {
  y: () => Relay.QL\`
    query {
      \${foo},
      field,
    }
  \`
};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
var o = {
  [\`key\`]: () => {
    // Comment
  }
};

var x = {
  y: () => Relay.QL\`
    query {
      \${foo},
      field,
    }
  \`
};
"
`;

exports[`parenthesis.js 1`] = `
"// \\"ArrowFunctionExpression\\"
(() => {})\`\`;

// \\"AssignmentExpression\\"
(b = c)\`\`;

// \\"AwaitExpression\\"
async function f() {
  (await b)\`\`;
}

// \\"BinaryExpression\\"
(b + c)\`\`;

// \\"CallExpression\\"
b()\`\`;

// \\"ClassExpression\\"
(class {})\`\`;

// \\"ConditionalExpression\\"
(b ? c : d)\`\`;

// \\"FunctionExpression\\"
(function() {})\`\`;

// \\"LogicalExpression\\"
(b || c)\`\`;

// \\"MemberExpression\\"
b.c\`\`;

// \\"NewExpression\\"
(new B())\`\`;

// \\"ObjectExpression\\"
({})\`\`;

// \\"SequenceExpression\\"
(b, c)\`\`;

// \\"TaggedTemplateExpression\\"
(\`\`)\`\`;

// \\"UnaryExpression\\"
(void b)\`\`;

// \\"UpdateExpression\\"
(++b)\`\`;

// \\"YieldExpression\\"
function* f() {
  (yield 1)\`\`;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// \\"ArrowFunctionExpression\\"
(() => {})\`\`;

// \\"AssignmentExpression\\"
(b = c)\`\`;

// \\"AwaitExpression\\"
async function f() {
  (await b)\`\`;
}

// \\"BinaryExpression\\"
(b + c)\`\`;

// \\"CallExpression\\"
b()\`\`;

// \\"ClassExpression\\"
(class {}\`\`);

// \\"ConditionalExpression\\"
(b ? c : d)\`\`;

// \\"FunctionExpression\\"
(function () {})\`\`;

// \\"LogicalExpression\\"
(b || c)\`\`;

// \\"MemberExpression\\"
b.c\`\`;

// \\"NewExpression\\"
new B()\`\`;

// \\"ObjectExpression\\"
({}\`\`);

// \\"SequenceExpression\\"
(b, c)\`\`;

// \\"TaggedTemplateExpression\\"
\`\`\`\`;

// \\"UnaryExpression\\"
(void b)\`\`;

// \\"UpdateExpression\\"
(++b)\`\`;

// \\"YieldExpression\\"
function* f() {
  (yield 1)\`\`;
}
"
`;
