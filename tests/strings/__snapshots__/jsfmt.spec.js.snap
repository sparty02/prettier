// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`strings.js 1`] = `
"[
  \\"abc\\",
  'abc',

  '\\\\'',

  '\\"',
  '\\\\\\"',
  '\\\\\\\\\\"',

  \\"'\\",
  \\"\\\\'\\",
  \\"\\\\\\\\'\\",

  \\"'\\\\\\"\\",
  '\\\\'\\"',

  '\\\\\\\\',
  \\"\\\\\\\\\\",

  '\\\\0',
  'üê∂',

  '\\\\uD801\\\\uDC28',
];
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[
  \\"abc\\",
  \\"abc\\",

  \\"'\\",

  '\\"',
  '\\"',
  '\\\\\\\\\\"',

  \\"'\\",
  \\"'\\",
  \\"\\\\\\\\'\\",

  \\"'\\\\\\"\\",
  \\"'\\\\\\"\\",

  \\"\\\\\\\\\\",
  \\"\\\\\\\\\\",

  \\"\\\\0\\",
  \\"üê∂\\",
  '\\\\uD801\\\\uDC28'
];
"
`;

exports[`strings.js 2`] = `
"[
  \\"abc\\",
  'abc',

  '\\\\'',

  '\\"',
  '\\\\\\"',
  '\\\\\\\\\\"',

  \\"'\\",
  \\"\\\\'\\",
  \\"\\\\\\\\'\\",

  \\"'\\\\\\"\\",
  '\\\\'\\"',

  '\\\\\\\\',
  \\"\\\\\\\\\\",

  '\\\\0',
  'üê∂',

  '\\\\uD801\\\\uDC28',
];
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[
  \\"abc\\",
  \\"abc\\",

  \\"'\\",

  '\\"',
  '\\"',
  '\\\\\\\\\\"',

  \\"'\\",
  \\"'\\",
  \\"\\\\\\\\'\\",

  \\"'\\\\\\"\\",
  \\"'\\\\\\"\\",

  \\"\\\\\\\\\\",
  \\"\\\\\\\\\\",

  \\"\\\\0\\",
  \\"üê∂\\",
  '\\\\uD801\\\\uDC28',
];
"
`;

exports[`template-literals.js 1`] = `
"foo(\`a long string \${ 1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 } with expr\`);

const x = \`a long string \${ 1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + ( function() {return 3 })() + 3 + 2 + 3 + 2 + 3 } with expr\`;

foo(\`a long string \${ 1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + ( function() {
  const x = 5;

  return x;
 })() + 3 + 2 + 3 + 2 + 3 } with expr\`);

pipe.write(
  \`\\\\n  \${chalk.dim(\`\\\\u203A and \${more} more \${more} more \${more} more \${more}\`)}\`,
);
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
foo(
  \`a long string \${1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3} with expr\`
);

const x = \`a long string \${1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + (function () {
    return 3;
  })() + 3 + 2 + 3 + 2 + 3} with expr\`;

foo(
  \`a long string \${1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + (function () {
      const x = 5;

      return x;
    })() + 3 + 2 + 3 + 2 + 3} with expr\`
);

pipe.write(
  \`\\\\n  \${chalk.dim(\`\\\\u203A and \${more} more \${more} more \${more} more \${more}\`)}\`
);
"
`;

exports[`template-literals.js 2`] = `
"foo(\`a long string \${ 1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 } with expr\`);

const x = \`a long string \${ 1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + ( function() {return 3 })() + 3 + 2 + 3 + 2 + 3 } with expr\`;

foo(\`a long string \${ 1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + ( function() {
  const x = 5;

  return x;
 })() + 3 + 2 + 3 + 2 + 3 } with expr\`);

pipe.write(
  \`\\\\n  \${chalk.dim(\`\\\\u203A and \${more} more \${more} more \${more} more \${more}\`)}\`,
);
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
foo(
  \`a long string \${1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3} with expr\`,
);

const x = \`a long string \${1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + (function () {
    return 3;
  })() + 3 + 2 + 3 + 2 + 3} with expr\`;

foo(
  \`a long string \${1 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + (function () {
      const x = 5;

      return x;
    })() + 3 + 2 + 3 + 2 + 3} with expr\`,
);

pipe.write(
  \`\\\\n  \${chalk.dim(\`\\\\u203A and \${more} more \${more} more \${more} more \${more}\`)}\`,
);
"
`;
