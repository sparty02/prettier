// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API.react.js 1`] = `
"
var app = require('JSX');

app.setProps({y:42}); // error, y:number but foo expects string in App.react
app.setState({z:42}); // error, z:number but foo expects string in App.react

function bar(x:number) { }
bar(app.props.children); // No error, App doesn't specify propTypes so anything goes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
var app = require(\\"JSX\\");

app.setProps({ y: 42 }); // error, y:number but foo expects string in App.react
app.setState({ z: 42 }); // error, z:number but foo expects string in App.react

function bar(x: number) {}
bar(app.props.children); // No error, App doesn't specify propTypes so anything goes
"
`;

exports[`App.react.js 1`] = `
"
/**
 * @providesModule App.react
 * @jsx React.DOM
 */

var React = require('react');

// expect args to be strings
function foo(p:string,q:string):string { return p+q; }

var App = React.createClass({

  getDefaultProps: function(): { y: string } {
    return {y:\\"\\"}; // infer props.y: string
  },

  getInitialState: function() {
    return {z:0}; // infer state.z: number
  },

  handler: function() {
    this.setState({z:42}); // ok
  },

  render: function() {
    var x = this.props.x;
    var y = this.props.y;
    var z = this.state.z;

    //this.state;

    return (
      <div>
        {foo(x,y)}
        {foo(z,x)} // error, since z: number
      </div>
    );
  }

});

module.exports = App;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 * @providesModule App.react
 * @jsx React.DOM
 */

var React = require(\\"react\\");

// expect args to be strings
function foo(p: string, q: string): string {
  return p + q;
}

var App = React.createClass({
  getDefaultProps: function (): { y: string } {
    return { y: \\"\\" }; // infer props.y: string
  },

  getInitialState: function () {
    return { z: 0 }; // infer state.z: number
  },

  handler: function () {
    this.setState({ z: 42 }); // ok
  },

  render: function () {
    var x = this.props.x;
    var y = this.props.y;
    var z = this.state.z;

    //this.state;

    return (
      <div>
        {foo(x, y)}
        {foo(z, x)} // error, since z: number
      </div>
    );
  }
});

module.exports = App;
"
`;

exports[`JSX.js 1`] = `
"
/* @providesModule JSX */

var React = require('react');
var App = require('App.react');

var app =
  <App y={42}> // error, y: number but foo expects string in App.react
    Some text.
  </App>;

module.exports = app;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/* @providesModule JSX */

var React = require(\\"react\\");
var App = require(\\"App.react\\");

var app = (
  <App y={42}>
    {\\" \\"}// error, y: number but foo expects string in App.react
    Some text.
  </App>
);

module.exports = app;
"
`;

exports[`propTypes.js 1`] = `
"var React = require('React');

var C = React.createClass({
  propTypes: {
    title: React.PropTypes.string.isRequired,
  }
});
var D = React.createClass({
  propTypes: {
    name: React.PropTypes.string.isRequired,
    ...C.propTypes,
  }
});

<D
  namee='foo' // error (as usual)
  titlee='bar' // OK (error ignored when spread is used)
/>;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
var React = require(\\"React\\");

var C = React.createClass({
  propTypes: {
    title: React.PropTypes.string.isRequired
  }
});
var D = React.createClass({
  propTypes: {
    name: React.PropTypes.string.isRequired,
    ...C.propTypes
  }
});

<D
  namee=\\"foo\\" // error (as usual)
  titlee=\\"bar\\" // OK (error ignored when spread is used)
/>;
"
`;
